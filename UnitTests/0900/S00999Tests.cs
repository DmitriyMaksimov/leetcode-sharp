using leetcode_sharp;

namespace UnitTests;

[TestFixture]
public class S00999Tests
{
    [Test]
    public void T1()
    {
        var sut = new S00999();
        Assert.That(sut.NumRookCaptures(
        [
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', 'p', '.', '.', '.', '.'],
            ['.', '.', '.', 'R', '.', '.', '.', 'p'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', 'p', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.']
        ]), Is.EqualTo(3));
    }

    [Test]
    public void T2()
    {
        var sut = new S00999();
        Assert.That(sut.NumRookCaptures(
        [
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
            ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
            ['.', 'p', 'B', 'R', 'B', 'p', '.', '.'],
            ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
            ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.']
        ]), Is.EqualTo(0));
    }

    [Test]
    public void T3()
    {
        var sut = new S00999();
        Assert.That(sut.NumRookCaptures(
        [
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', 'p', '.', '.', '.', '.'],
            ['.', '.', '.', 'p', '.', '.', '.', '.'],
            ['p', 'p', '.', 'R', '.', 'p', 'B', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', 'B', '.', '.', '.', '.'],
            ['.', '.', '.', 'p', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.']
        ]), Is.EqualTo(3));
    }
}