using leetcode_sharp;

namespace UnitTests;

[TestFixture]
public class S01958Tests
{
    [Test]
    public void T1()
    {
        var sut = new S01958();
        Assert.That(
            sut.CheckMove(
            [
                ['.', '.', '.', 'B', '.', '.', '.', '.'],
                ['.', '.', '.', 'W', '.', '.', '.', '.'],
                ['.', '.', '.', 'W', '.', '.', '.', '.'],
                ['.', '.', '.', 'W', '.', '.', '.', '.'],
                ['W', 'B', 'B', '.', 'W', 'W', 'W', 'B'],
                ['.', '.', '.', 'B', '.', '.', '.', '.'],
                ['.', '.', '.', 'B', '.', '.', '.', '.'],
                ['.', '.', '.', 'W', '.', '.', '.', '.']
            ], 4, 3, 'B'), Is.True);
    }

    [Test]
    public void T2()
    {
        var sut = new S01958();
        Assert.That(
            sut.CheckMove(
            [
                ['.', '.', '.', '.', '.', '.', '.', '.'],
                ['.', 'B', '.', '.', 'W', '.', '.', '.'],
                ['.', '.', 'W', '.', '.', '.', '.', '.'],
                ['.', '.', '.', 'W', 'B', '.', '.', '.'],
                ['.', '.', '.', '.', '.', '.', '.', '.'],
                ['.', '.', '.', '.', 'B', 'W', '.', '.'],
                ['.', '.', '.', '.', '.', '.', 'W', '.'],
                ['.', '.', '.', '.', '.', '.', '.', 'B']
            ], 4, 4, 'W'), Is.False);
    }

    [Test]
    public void T3()
    {
        var sut = new S01958();
        Assert.That(
            sut.CheckMove(
            [
                ['.', '.', 'W', '.', 'B', 'W', 'W', 'B'],
                ['B', 'W', '.', 'W', '.', 'W', 'B', 'B'],
                ['.', 'W', 'B', 'W', 'W', '.', 'W', 'W'],
                ['W', 'W', '.', 'W', '.', '.', 'B', 'B'],
                ['B', 'W', 'B', 'B', 'W', 'W', 'B', '.'],
                ['W', '.', 'W', '.', '.', 'B', 'W', 'W'],
                ['B', '.', 'B', 'B', '.', '.', 'B', 'B'],
                ['.', 'W', '.', 'W', '.', 'W', '.', 'W']
            ], 5, 4, 'W'), Is.True);
    }
}
